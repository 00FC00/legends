{
	id = 0, --任务id，任务ID值是唯一的，不得重复 
	name = "任务1", --任务名称, --注意将文字放到语言包中 
	parentid = -1,--父任务ID，如果值为-1则表示没有父任务，否则必须在做完父任务后才能接此任务 
	--[[
	"0-主线任务",
	"1-支线任务",
	"2-副本任务",
	"3-日常任务",
	"4-帮派任务",
	"5-挑战任务",
	"6-奇遇任务",
	"7-活动推介(点亮圣诞任务)",
	"8-阵营任务",
	"9-装备提升",
	"10-循环任务",
	"12-狩猎任务",
	"13-财富闯关任务",

	]]
	type = 0,	--参照上面编号
	level = 5,	--任务品级, 普通、中级、高级、特级（品级越高，奖励越大）
	circle = 10, --如果是固定环任务,表示当前任务所在第几环
	entrust = 2,	--说明本任务支持双倍经验，值代码经验的倍数
	star = 0,		--本项目没用到
	cangiveup = false,	--是否可以放弃
	automount = true, -- 是否接任务自动上坐骑
    autoRun = false, --接到任务以后是否自动寻路，默认false是不自动寻路的，true表示自动寻路
	content = "", 	--任务描述，用于再客户端的任务面板中显示的简短描述，可使用HTML语法、寻路指令, --注意将文字放到语言包中 
    guideId =0, --引导窗口的ID，0表示默认，不配置，1“如何提升”打开商城的宝石强化界面，2“快速完成”打开任务委托界面，3“如何升级”打开江湖宝典我要升级界面
	
	--接任务NPC配置，如果值为nil则表示这个任务不需要通过NPC接受，在满足接受条件时自动接受
	prom =  
	{ 
		type = 0,--任务的接受和提交类型，0表示从NPC上接任务；1表示满足接受条件时自动接受；2表示由脚本系统动态发布 
		scene = "发布任务的NPC所在场景名称",  --发布任务的NPC所在场景名称，当type值非0的时候必须配置为nil, --注意将文字放到语言包中 
		npc = "发布任务的NPC名称", --发布任务的NPC名称，当type值非0的时候必须配置为nil, --注意将文字放到语言包中 
	},         
	--交任务NPC配置，如果值为nil则表示这个任务不需要通过NPC交任务，在满足需求条件时自动完成并获得奖励
	comp = 
	{                         
		type = 0,--任务的接受和提交类型，0表示从NPC上交务；1表示满足需求条件时自动完成并获得奖励；2表示由脚本系统动态处理
		scene = "交任务的NPC所在的场景名称", --交任务的NPC所在的场景名称，当type值非0的时候必须配置为nil, --注意将文字放到语言包中
		npc = "交任务的NPC名称",  --交任务的NPC名称，当type值非0的时候必须配置为nil, --注意将文字放到语言包中  
	},
	--目标列表
	target = 
	{
		--一个任务需求的配置
		--[[        
		//0 杀怪类、1 收集类（√）、2 消耗类（√）、3 对话类（√）、4 送物类（√）
		qtMonster = 0,--（√）
		qtCollect = 1,--（√）
		qtConsume = 2,--（√）
		qtDialog = 3,--（√）
		qtSend = 4,--（√）
		//升级类,2个字节，第一个字节表示二级分类，第二个字节表示第一分类
		qtActorLevel = 5,//1）角色的等级达标（√）
		qtGuildLevel = 6,//2）角色所在帮派等级
		qtPetStrengthen = 7,	//灵兽强化相关 id配置：1，灵兽资质强化。2，灵兽资质洗炼。count必须配置成1（√）
		qtKillOtherCamp = 8,	//杀敌对阵营玩家,id配置成1，count配置杀的数量（√）
		qtEquipmentQian = 9,	//杀指定等级的怪,id为怪的最小等级，count为应该等级以上的数量
		qtEquipmentJing = 10,	//完成指定任务类型 id为任务类型，count为完成该类型次数
		qtKill	= 11,//7）角色杀戮值
		qtZanHun = 12,//8）角色战魂值
		qtGuildContribution = 13,//9）角色帮派贡献分
		qtZYContribution = 14,//10）角色阵营贡献
		//经脉类
		qtClientEvent	= 15,		//客户端主动触发任务事件,id为1是登陆器下载
		qtJingMaiID = 16,//2）指定经脉的ID
		
		//使用类
		qtScenePos = 17,	//1）在指定场景、场景坐标；
		qtNpcPos = 18,		//2）指定NPC
		//探索类
		qtSearchScene = 19,	//到达的场景ID，
		qtSearchNpc = 20,	//查找到NPC
		//护卫类
		qtProtectNpc = 21,		//1）护卫指定NPC至目标场景（目标NPC处）
		qtProtectNpc1 = 22,//2）交谈完后该NPC就跟随着玩家，直到把该NPC送至目标场景
		//工具使用类
		qtToolUse = 23,		//1）使用工具采集一次指定物品
		qtToolMake = 24,		//2）使用工具制作一次指定物品
		//交互类
		qtEnterGuild = 25,//1）加入帮派情况,id和count必需配置1（√）
		qtHasMaster = 26,//2）是否有师傅
		qtHasApprentice = 27,//3）是否有徒弟
		qtHasJieBai = 28,//4）是否有结拜
		qtHasLover = 29,	//5）是否有伴侣
		qtFriends = 30,	//6）是否有好友（好友人数）
		qtUseItem = 31,//使用某个物品
		qtSkillLevel = 32, //学习一个技能，参数是技能ID，技能等级（√）
		qtSuit = 33,		//玩家身上套装是否收集齐全,id参数是套装的id,count表示收集多少装备（√）
		
		qtEntrust = 34,		//任务委托扩展分类
		qtOneOfMonsters = 35,	//多种怪中随便打一种，注意：有几种怪就配置几条数据,指定type=35（√）
		qtOneOfItems	= 36,	//多种物品中随便收集一种,注意：有几种物品就配置几条数据,指定type=35（√）
		qtEquipStrengthen = 37,	//装备强化相关,id表示类型,count表示操作次数，类型如下：1 装备升级 2 装备强化 3 装备鉴定 4 鉴定清洗 5 翅膀合成 6 转生装备锻造 7 装备分解 8 道具合成,9 诛魔结阵（√）
		qtRandCircle		= 38,	//随机环任务,随机任务库在任务配置里配置，如果只有一个相当于固定流向的环任务,id:（1，阵营，2，帮派，3，师门)，count表示最大环数
		qtFubenQuest = 39,		//副本任务:id为副本的id，count要进入的次数
		qtRandomTarget = 40,	//目标随机
		qtConsumeTalentItem = 41,	//消耗天赋丹 count 表示需要消耗的个数
		qtConsumeYubao = 42,		//累计消耗元宝数  count 表示需要消耗的元宝
		qtCosumeDraw = 43,			//提取元宝数  count 表示需要提取的元宝
		
		//自定义需求，id为在此需求表中唯一的非0值（最大值为65000），
		//count为需要完成的数量，data值为自定义需求的名称；自定义需求需要通过脚本来增加完成的值； 
		127：自定义需求，id为在此需求表中唯一的非0值（最大值为65000），count为需要完成的数量，data值为自定义需求的名称；自定义需求需要通过脚本来增加完成的值；（√）
		]] 
		{ type = 0, id = 0, count = 0 },	--type对应上面的目标类型id值，比如杀怪的id是0，根据不同的type，后面的id和count会表示不同的意义，比如杀怪类，则id表示怪物的id，count表示数量
		{
			type = 127, id = 1000, count = 1, data = "与XX对话%d次", 
			--任务目标地点，配置用于进行自动寻路
			location = 
			{
				sceneid = 0, entityName = "", x = 0, y = 0, --如果entityName表示的是怪物或NPC名字则可以不配置x、y
				--到达此location需要经过的前提地点列表，例如：在XX的YY出进入ZZ副本， 
				pass = 
				{
				   {sceneid = 0, entityName = "", actionDesc = "行为描述", x = 0, y = 0, }, --如果entityName表示的是怪物或NPC名字则可以不配置x、y
				},
				hideFastTransfer = false,  --表示是否显示速传，默认不显示
			},
		}, --注意将文字放到语言包中
	}, 
	--奖励列表 
	awards = 
	{
		--[[
		"0-装备，道具",
		"1-修为",
		"2-角色经验值",
		"3-帮派贡献值",
		"4-阵营贡献",
		"5-绑定银两",
		"6-银两",
		"7-礼金",
		"8-称谓",
		"9-奖励技能",
		"10-奖励战魂",
		"11-成就点",
		"12-声望",
		"13-奖励宠物",
		"14-奖励活跃度",
		"15-元宝",
		"16-繁荣度",
		"17-玥石",
		"18-命盘技能XP值",
		"19-竞技积分",
		"20-经验表加经验",
		"21-荣誉",
		"22-转生灵魄",
		"23-怒气",
		"24-boss",
		"25-玩家升级",
		"26-宝宝升级",
		"27-行会资金",
		"28-亲密度",
		"127-自定义奖励",
		  127：自定义奖励，id必须为nil，count必须为nil，data为奖励描述字符串，用于客户端显示。自定义奖励的给予是通过脚本完成的；
		]]
		--新增2个属性值，strong（强化值），quality（品质），这两个属性只对装备奖励有效，其他类型的奖励不需配置
		{ type = 0, id = 0, count = 0, group = 0, strong=10, quality=2},    --group表示是否可选，0表示不可选（必送），否则表示可选奖励
		{ type = 1, id = 1, count = 1,  bind = false, job = 1, sex = 0, group=0 },---bind为true，表示需要绑定，为false不需要绑定，job为-1表示不限制职业，sex=-1也是不限制性别，否则必须符合的玩家才能接收这个奖励
		{ type = 127, id = 0, count = 0, datastr = "<FONT COLOR='#00FF00'>隐身状态3分钟</FONT>",group=-1 }, --注意将文字放到语言包中 
	}, 
	--任务条件表 
	conds = 
	{
		--[[
		任务条件配置项
		cond为条件类型，有如下值：
		0：要求升到N级，id无意义，count为要求升到的等级,补充：如果id设置了一个比count大的值，表示这个任务限制等级低于id的才可以接
		  1：要求帮派等级，id无意义，count为要求的等级
		  2：要求职业，id为职业的编号，count无意义
		  3：有完成这个任务才能接  id,count都表示任务id
					4、所在阵营,id和count为阵营编号，表示只要玩家阵营满足其中一个即可接受任务，如果限定只有一个阵营可接，只需要id或count其中任意一个填0，另外一个填阵营id即可
					5、杀戮值，id无意义，count为杀戮值
					6、战魂值，id无意义，count为战魂值
					7、满足前置任务完成的条件，区别：id是前置任务完成后，才可接本任务，count指向环任务最后一环，本条只相对周期任务有效。
					8、身上携带物品,id为物品编号，，count为杀戮值
					9、物品数量,id为物品编号，count表示数量
					--10、对应道具ID,输入道具ID，玩家双击该道具后添加任务(zac:这种是通过物品获得任务）
		11、满足多个门派要求，id为门派的列表，id为int类型，4个字节，每个字节表示一个门派id，没有则为0
		如：{ type = 11,id = 516,count=0},就是门派2和4
		12、支持两个前置任务,id和count各表示前置任务ID。
		13、性别限制，id表示性别，0男，1女
		14、支持转数,id无意义,count转数
		15、只有卫城占领者才能领取 id、count都为0
		如：{ type = 12,id = 102, count = 258},	--分别表示102或者258任务完成就可以达到这个任务的条件
		]]
		{ type = 0, id=12,count = 0 },
	},
	timelimit = 100,--任务时间限制，单位是秒钟，从接任务后开始计时，必须在时间归零前完成任务，否则任务自动注销，0表示不限制时间； 
	interval = 0,--任务周期，单位是秒。0表示这个任务永远只能做一次。任务周期表示从当天0点开始，进行任务后的多长时间后才能再次接任务。
	maxcount = 1,--每个任务周期内，可以做多少次，0表示不限制； 
	excludetree = true, --如果接了此任务的子任务，则不能再接此任务；
	
	PromMsTalks = {                  -- 可接任务表
								   -- 可接任务的对话
	},
	
	CompMsTalks = {                  -- 可完成任务表
								   -- 可完成任务对话
	},
	
	CompMsTip = {                    -- 未完成任务表
	},                               -- 未完成任务对话 

	--问答类的任务需要配置的问题的答案，一般只有2条，正确的答案在最后一条
	--注意如果是表示问答类的任务，这几行都不要存在了
	AnswerTip = {
		"刀剑是好玩的游戏",	--这只是个例子，具体要放到语言包
		"刀剑是非常好玩的游戏",
	},
--[[
   PromCheck = "OnAddItem", -- 玩家接受任务前的条件检查(按照需要进行使用可省略不写)
                            -- 在判断限制条件后的需要显示的字符串
                            --（内部需要做一些的逻辑的处理和判断）
	PromCheckArg = {},
--]]

--[[PromCallBack的配置>>>>>>>>>>>>
	1,如果是随机环任务的父任务，回调函数赋值为:
	PromCallBack = "OnPromCampCircle",
	,且在PromCallBackArg上配置上参数（参数1：可接任务列表 ）
	2,其他的检查，返回false表示检查失败
   PromCallBack = function(sysarg,mission)   -- 玩家接受任务前的条件检查，在添加任务时执行此函数(按照需要进行使用可省略不写)
      --return false,""                       -- 在判断限制条件后的需要显示的字符串
   end
--]]
--[[PromCallBackArg的配置>>>>>>>>>>>>
   PromCallBackArg ={						--接受任务后回调的参数，参数数量任意
		参数1，
		参数2，
   }
--]]

--[[
  CompCheck = function(sysarg,mission)     -- 玩家接受任务前的条件检查(按照需要进行使用可省略不写)
      --return false,""                       -- 在判断限制条件后的需要显示的字符串
  end
--]]


--[[CompCallBack的配置>>>>>>>>>>>>
	1,如果是随机环任务，回调函数赋值为:
	CompCallBack = "OnCompCampCircle",
	CompCallBack = "OnFinishCircle",
	2,如果是需要物品的任务，要加上此函数，用于任务完成之后从玩家身上去掉相关物品（脚本处理已经实现，可直接使用）
	  CompCallBack = function(sysarg)
		 for i,v in pairs(target) do
			 if v.type == 1 then
				Actor.removeItem(sysarg,v.id,v.count)
			 end
		 end
	  end
	  CompCallbackArg = {			完成任务后回调的参数，参数数量任意
		--参数1,
		--参数2,
		....
	  }
--]]
--[[CompCallbackArg的配置>>>>>>>>>>>>
	如果配置了CompCallBack且需要参数的，在CompCallbackArg上配置上参数:参数1为可接任务列表，参数2环任务类型（1，阵营，2，帮派，3，师门等)，参数3，父任务的ID
]]
},