--lua script
--翅膀合成


--玩家开始合成, args = {物品指针数量,[指针1],[指针2],..物品处理类型,[参数1]，[参数2],...}
function OnWingComposite( sysarg, args )
	local ptrCount = args[1]			--指针数量
	itemPtr = {}
	for i=1,ptrCount do
		itemPtr[i] = args[1+i]
	end

	local opType = args[ptrCount+2]		--操作类型
	local nGrade = args[ptrCount+3]		--选择合成档次
	local isRepCost = args[ptrCount+4]	--是否元宝替代
	
	
	if not nGrade then return false end
	
	local consumeConfig = enhanceConfigMap[opType]
	
	local config = consumeConfig[nGrade]
	
	if (config == nil) then
		System.trace("OnWingComposite error can't find config, grade="..nGrade)
		return false
	end
	
	local award = config.awards[1]
	if award.type ~= 0 or award.id <= 0 then
		System.trace("OnWingComposite awards error！, grade="..nGrade)
		return 
	end
	
	if Awards.CheckBagGridCount(sysarg, config.awards) ~= true then return end
	
	-- local dynamic_consum_items = 
	-- {
		-- other_dy_items = {}, 
		-- luckitems = {},
	-- }
	
	-- local result = SuccessCheck(sysarg, args, config, dynamic_consum_items, isRepCost)
	
	if nGrade == 1 then
		local resultCheck = SuccessCheck(sysarg, opType, config.consumes, isRepCost, 0, true)
			
		if (resultCheck ~= successCheckResult.ok) then return false end
	end

	local logstr = string.format(Lang.LogTips.l00071, nGrade)
	--local result, isBind = EnhanceConsume( sysarg, args, config, dynamic_consum_items, opType, isRepCost, logstr)

	local result = successCheckResult.ok
	local isBind = 0
	local nStrong = 0
	local ZfValue = 0
	if nGrade == 1 then
		local result1, isBind1 = EnhanceConsumes(sysarg, opType, config.consumes, isRepCost, 0, 0, logstr, true)
		result = result1
		isBind = isBind1
	else
		local nStrong1,ZfValue1,isBind1 = CheckAndConsume(sysarg,config.consumes,nGrade,isRepCost,ptrCount,itemPtr)
		nStrong = nStrong1
		ZfValue = ZfValue1
		isBind = isBind1
		if nStrong1 == -1 then 
			Actor.sendTipmsg(sysarg, Lang.LogTips.l00171, ttFlyTip)
			return false 
		end
	end

	if (result ~= successCheckResult.ok) then return false end
	
	--创建一个装备 
	local quality = award.quality or 0
	local strong = award.strong or 0
	
	local newItemPtr = Item.createItem(award.id, 1, nStrong, quality,isBind, 0)
	if not newItemPtr then
		System.trace("createItem error, id = "..newItem)
		return false
	end
	
	--给玩家添加一个装备 
	if (Item.addItem(sysarg, newItemPtr, Lang.LogTips.l00072, 88, 1) ~= 1) then
		System.trace("add Item error, id = "..newItem)
		return false
	end
	
	Item.setItemProperty(sysarg,newItemPtr,Item.ipItemHole4Item, ZfValue)
	--[[
	--给玩家添加一个装备 
	if Actor.addItem(sysarg, award.id, quality, nStrong, 1, isBind, 0, Lang.LogTips.l00072, 88) < 1 then
		System.trace("add Item error, id = "..award.id)
		return false
	end
	--]]
	--返回客户端处理结果
	Item.sendItemProcessResult( sysarg, nil, opType, false)
	return true
end

--获取合成的消耗,args = {物品指针数量,[指针1],[指针2],..物品处理类型,[参数1]，[参数2],...}
function GetWingCompositeConsumes(sysarg, args)
	local ptrCount = args[1]			--指针数量
	local opType = args[ptrCount+2]		--操作类型
	local nGrade = args[ptrCount+3]		--选择合成档次
	
	if not nGrade then return false end
	
	local consumeConfig = enhanceConfigMap[opType]
	
	local config = consumeConfig[nGrade]
	
	if (config == nil) then
		System.trace("GetWingCompositeConsumes error can't find config, grade="..nGrade)
		return false
	end

	local consumes = {}
	--SendConsumesToClient(sysarg, opType, config.consumes)
	
	local npack = DataPack.allocPacket(sysarg, 8, 15)
	if not npack then return false end
	DataPack.writeByte(npack, opType)
	local count = table.getn(config.consumes)
	DataPack.writeByte(npack, count)
	for k, v in pairs(config.consumes) do
		DataPack.writeByte(npack, v.type)
		DataPack.writeInt(npack, v.id)
		DataPack.writeInt(npack, v.count)
		local usetype = v.usetype or 0
		DataPack.writeByte(npack, usetype)
		local nStrong = v.strong or 0
		DataPack.writeByte(npack, nStrong)
	end
	DataPack.flush(npack)
end

--检查材料是否足够
function CheckAndConsume(sysarg,nConfig,nGrade,isRepCost,nCount,itemPtrs)
	if nConfig == nil then 
		return -1,0,0
	end

	if nCount <= 0 then 
		return -1,0,0
	end
	
	local nRepCost = isRepCost or 0
	if nGrade == nil then
		return -1,0,0
	end
	
	local nValue = 0
	local reStrong = 0
	local isBind = 0
	
	local maxCount = 0
	for i=1,table.getn(nConfig) do
		if nConfig[i].type == 0 then
			maxCount = maxCount + 1
		end
	end
	
	if maxCount > nCount then
		return -1,0,0
	end

	for i=1,table.getn(nConfig) do
		if nConfig[i].type == 0 then
			local curCount = 0
			for j=1,nCount do
				local bResult = 0
				local nItemId = Item.getItemProperty( sysarg, itemPtrs[j], Item.ipItemID, 0)
				if nConfig[i].id ~= nItemId then
					bResult = 1
				end
	
				local nQuality = Item.getItemProperty( sysarg, itemPtrs[j], Item.ipItemQuality, 0)
				if nConfig[i].quality >= 0  and nConfig[i].quality ~= nQuality then
					bResult = 1
				end
	
				local nStrong = Item.getItemProperty( sysarg, itemPtrs[j], Item.ipItemStrong, 0)
				if nConfig[i].strong >= 0 and nConfig[i].strong > nStrong then
					bResult = 1
				end
				
				if Item.getItemProperty( sysarg, itemPtrs[j], Item.ipItemBind, 0) > 0 then
					isBind = Item.getItemProperty( sysarg, itemPtrs[j], Item.ipItemBind, 0)
				end

				if reStrong < nStrong then
					reStrong = nStrong
					nValue = Item.getItemProperty( sysarg, itemPtrs[j], Item.ipItemHole4Item, 0)
				end

				if bResult == 0 then
					curCount = curCount + 1
				end
			end

			if curCount < nConfig[i].count then
				return -1,0,0
			end
		else
			if Actor.checkConsume(sysarg, nConfig[i].type, nConfig[i].id, nConfig[i].count) == false then
				return -1,0,0
			end
		end
	end

	local logstr = string.format(Lang.LogTips.l00071, nGrade)
	for j=1,nCount do
		if Item.removeEquip(sysarg, itemPtrs[j], logstr,87, true) == 0 then
			Item.removeItem(sysarg, itemPtrs[j], 1,logstr,87)
		end
	end
	
	for i=1,table.getn(nConfig) do
		if nConfig[i].type > 0 then
			Actor.removeConsume(sysarg, nConfig[i].type, nConfig[i].id, nConfig[i].count, 0, 0, 0, 0, 162, logstr)
		end
	end

	return reStrong,nValue,isBind
end