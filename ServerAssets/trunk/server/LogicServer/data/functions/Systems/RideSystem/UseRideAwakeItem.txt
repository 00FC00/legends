--使用物品增加飞升值
--lua script
--#include "data\config\ride\RideAwarkItem.txt" once 
--#include "data\config\ride\AllRideConfig.txt" once
--#include "data\config\ride\RideGameConfig.txt" once

function OpUseRideAwakeItemOp(sysarg,itemidx,itemPtr,ItemTable)
	if System.isCommonServer() == true then return end

	if(Actor.getItemCount(sysarg,ItemTable.item_id) == 0) then
		Actor.sendTipmsg( sysarg,Lang.ScriptTips.x00013,ttTipmsgWindow )
		return
	end
	
	local nLevel = Actor.getIntProperty(sysarg, PROP_ACTOR_RIDE_LEVEL)
	local nCurExp = Actor.getIntProperty(sysarg, PROP_ACTOR_MOUNT_EXP)
	if CheckRideAwakeItem(sysarg, nLevel, nCurExp) ~= true then
		Actor.sendTipmsg(sysarg, Lang.Activity.cr0041, ttFlyTip)
		return
	end
	
	local nOrder = Actor.getRideOrder(sysarg)
	local nStar = Actor.getRideStarIndex(sysarg)
	
	
	local config = RideGameConfig.rideRankConfig[nOrder+1].awake
	
	if not config then return end
		
	local nCurValue = Actor.getIntProperty(sysarg, PROP_ACTOR_RIDE_AWAKE)
	--print(nCurValue)
	if (nOrder+1) >= table.getn(RideGameConfig.rideRankConfig) and nStar >= table.getn(RideGameConfig.rideRankConfig[nOrder+1].starOrder) then
		if nCurValue >= config.maxValue then 
			SendRideAwakeOp(sysarg, 0)
			Actor.sendTipmsg(sysarg, Lang.Gem.t00052, ttFlyTip)
			return 
		end
	end
	
	local nIndex = 0
	for k, v in ipairs(config.range) do
		if nCurValue >= v.value then
			nIndex = k
		else
			break
		end
	end
	
	--print(nIndex)
	local rangeConfig = config.range[nIndex]
	
	if not rangeConfig then return end
	
	if Actor.isDealing(sysarg) or Actor.isDeath(sysarg) then
		Actor.sendTipmsg(sysarg, Lang.Gem.t00053, ttFlyTip)
		SendRideAwakeOp(sysarg, 0)
		return
	end
	
	--if Consumes.CheckAndRemove(sysarg, rangeConfig.consumes, 919, Lang.LogTips.l00182) ~= true then
	Actor.removeItemByPtr(sysarg,itemPtr,1,true,"ride awkae",5)

	local awakeValue = nCurValue + ItemTable.Addvalue
	
	Actor.sendTipmsg(sysarg, string.format(Lang.Gem.t00054, ItemTable.Addvalue), ttFlyTip)
	
	--满了升级
	if awakeValue >= config.maxValue then
		--如果满阶满星
		if (nOrder+1) >= table.getn(RideGameConfig.rideRankConfig) and nStar >= table.getn(RideGameConfig.rideRankConfig[nOrder+1].starOrder) then
			awakeValue = config.maxValue
		else
			awakeValue = 0
			Actor.setUIntProperty(sysarg, PROP_ACTOR_MOUNT_EXP, 0)
			Actor.setUIntProperty(sysarg, PROP_ACTOR_RIDE_LEVEL, (nLevel+1))
			
			Actor.sendTipmsg(sysarg, string.format(Lang.Gem.t00050, nOrder+1), ttFlyTip)
			
			--System.broadcastTipmsg(string.format(Lang.Gem.t00055, Actor.getName(sysarg),nOrder+1), ttScreenCenter)
		end
		
		SendRideAwakeOp(sysarg, 0)
	else
		SendRideAwakeOp(sysarg, 1)
	end
	
	Actor.setUIntProperty(sysarg, PROP_ACTOR_RIDE_AWAKE, awakeValue)

	--刷新属性
	local newIndex = 0
	for k, v in ipairs(config.range) do
		if awakeValue >= v.value then
			newIndex = k
		else
			break
		end
	end
	if newIndex ~= nIndex then
		--print("collectOperate")
		Actor.collectOperate(sysarg,0)
	end

end

--获得阶
function GetRideOderByLevelAwake(nLevel)
	local nResult = 0
	if nLevel==0 then
		nResult = 0
	else
		nResult = math.floor((nLevel-1)/10)
	end

	return nResult
end

--获得星
function GetRideStarByLevelAwake(nLevel)
	local nResult = 0
	if nLevel==0 then
		nResult = 0
		return nResult
	elseif nLevel>0 and (nLevel % 10) == 0 then
		nResult =  10

		return nResult
	end

	nResult =  (nLevel % 10)

	return nResult
end

function SendRideAwakeOp(sysarg, result)
	local pack = DataPack.allocPacket(sysarg, 42, 7)
	if not pack then return end
	DataPack.writeByte(pack, result)
	DataPack.flush(pack)
end

function CheckRideAwakeItem(sysarg, nLevel, nCurExp)
	local config = RideGameConfig.rideRankConfig
	local nOrder = GetRideOderByLevelAwake(nLevel)
	if nLevel >= RideGameConfig.awakeLevel and (nOrder+1) <= table.getn(config) and config[nOrder+1].awake then
		local nStarIndex = GetRideStarByLevelAwake(nLevel)
		if config[nOrder+1].starOrder[nStarIndex] == nil then return false end
		
		local maxExp = config[nOrder+1].starOrder[nStarIndex].needExp

		if nStarIndex >= table.getn(config[nOrder+1].starOrder) and nCurExp >= maxExp and config[nOrder+1].awake.maxValue > 0 and config[nOrder+1].awake.canAwake then
			return true
		end
	end
	
	return false
end

function UseRideAwakeItemInit(sysarg)
  for i = 1,table.getn(RideAwakeItemConfig) do
	local x = RideAwakeItemConfig[i]
	GlobalItemFn[x.item_id] = { func = OpUseRideAwakeItemOp, params = x }
  end
end

table.insert(InitFnTable,UseRideAwakeItemInit)
