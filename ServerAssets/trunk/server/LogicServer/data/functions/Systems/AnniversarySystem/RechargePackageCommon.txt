--充值套餐 通用处理
--#include "data\functions\Activity\Common\Awards.txt" once

--领取充值套餐奖励
function OnGetRechargePackageAward(sysarg, args)
	local nTab = args[2]
	local nIndex = args[3]
	local nAwardType = args[4]
	local nScheme = args[5]
	
	if System.isOpenRechargePackage() ~= true then
		return
	end

	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	--累积充值
	if nTab == 1 then
		GetCumulateAward(sysarg, nTab, nIndex, nAwardType, nScheme)
	--单笔充值
	elseif nTab == 2 then
		GetSingleAward(sysarg, nTab, nIndex, nAwardType, nScheme)
	--循环充值
	elseif nTab == 3 then
		GetCycleAward(sysarg, nTab, nIndex, nAwardType, nScheme)
	--单日充值
	elseif nTab == 4 then
		if nAwardType == 4 then
			GetOneDayPurposeAward(sysarg, nTab, nIndex, nAwardType, nScheme)
		elseif nAwardType == 101 then
			GetOneDayExtraAward(sysarg, nTab, nIndex, nAwardType, nScheme)
		end
	--自选赠品
	elseif nTab == 5 then
		GetOptionalAward(sysarg, nTab, nIndex, nAwardType, nScheme)
	end
end

--领取累积充值奖励
function GetCumulateAward(sysarg, nTab, nIndex, nAwardType, nScheme)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	if Actor.getRechargeAwardFlag(sysarg, nTab, nIndex) == 1 then
		Actor.sendTipmsg(sysarg, Lang.Activity.cztc0001, ttFlyTip)
		return
	end
	
	local awardTerm = page[nScheme][nIndex]
	if not awardTerm then return end
	local myExtractYB = Actor.getRechargeExtractYB(sysarg, nTab)
	if myExtractYB < awardTerm.needYB then
		Actor.sendTipmsg(sysarg, Lang.Activity.cztc0002, ttFlyTip)
		return
	end
	
	local awards = awardTerm.awards	
	if not awards then return end
	
	local myJob = Actor.getIntProperty(sysarg, PROP_ACTOR_VOCATION)
	local mySex = Actor.getIntProperty(sysarg, PROP_ACTOR_SEX)

	if Awards.CheckBagGridCount(sysarg, awards) then		--背包够不够
		for i=1,table.getn(awards) do
			if (awards[i].job == -1 or awards[i].job == myJob) and (awards[i].sex == -1 or awards[i].sex == mySex) then
				Actor.giveAward(sysarg,awards[i].type,awards[i].id,awards[i].count,awards[i].quality,awards[i].strong,awards[i].bind,0,954,Lang.Activity.cztc0005, -1, awards[i].expireTime)
			end
		end
		Actor.setRechargeAwardFlag(sysarg,nTab,nIndex,1)	--设置完成
		SendGetRechargeResult(sysarg,nTab,nIndex,nAwardType,nScheme)
	end
end

--领取单笔充值奖励
function GetSingleAward(sysarg, nTab, nIndex, nAwardType, nScheme)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	if Actor.getRechargeAwardFlag(sysarg, nTab, nIndex) == 1 then
		Actor.sendTipmsg(sysarg, Lang.Activity.cztc0001, ttFlyTip)
		return
	end

	local nGetSingleFlag = Actor.getRechargeExtractYB(sysarg, nTab)

	if (System.getIntBit(nGetSingleFlag, nIndex-1) == 0) then
		Actor.sendTipmsg(sysarg, Lang.Activity.cztc0002, ttFlyTip)
		return
	end
		
	local awardTerm = page[nScheme][nIndex]
	if not awardTerm then return end

	local awards = awardTerm.awards	
	if not awards then return end
	
	local myJob = Actor.getIntProperty(sysarg, PROP_ACTOR_VOCATION)
	local mySex = Actor.getIntProperty(sysarg, PROP_ACTOR_SEX)

	if Awards.CheckBagGridCount(sysarg, awards) then		--背包够不够
		for i=1,table.getn(awards) do
			if (awards[i].job == -1 or awards[i].job == myJob) and (awards[i].sex == -1 or awards[i].sex == mySex) then
				Actor.giveAward(sysarg,awards[i].type,awards[i].id,awards[i].count,awards[i].quality,awards[i].strong,awards[i].bind,0,954,Lang.Activity.cztc0005, -1, awards[i].expireTime)
			end
		end
		Actor.setRechargeAwardFlag(sysarg,nTab,nIndex,1)	--设置完成
		SendGetRechargeResult(sysarg,nTab,nIndex,nAwardType,nScheme)
	end
end

--领取循环充值奖励
function GetCycleAward(sysarg, nTab, nIndex, nAwardType, nScheme)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	local awardTerm = page[nScheme][nIndex]
	if not awardTerm then return end

	local myExtractYB = Actor.getRechargeExtractYB(sysarg, nTab)

	local nCanGetCount = math.floor(myExtractYB / awardTerm.needYB)
	local nAwardData = Actor.getRechargeAwardData(sysarg, nTab)

	if nCanGetCount <= nAwardData then
		Actor.sendTipmsg(sysarg, Lang.Activity.cztc0002, ttFlyTip)
		return
	end
	
	local awards = awardTerm.awards	
	if not awards then return end

	local myJob = Actor.getIntProperty(sysarg, PROP_ACTOR_VOCATION)
	local mySex = Actor.getIntProperty(sysarg, PROP_ACTOR_SEX)

	if Awards.CheckBagGridCount(sysarg, awards) then		--背包够不够
		for i=1,table.getn(awards) do
			if (awards[i].job == -1 or awards[i].job == myJob) and (awards[i].sex == -1 or awards[i].sex == mySex) then
				Actor.giveAward(sysarg,awards[i].type,awards[i].id,awards[i].count,awards[i].quality,awards[i].strong,awards[i].bind,0,954,Lang.Activity.cztc0005, -1, awards[i].expireTime)
			end
		end
		nAwardData = nAwardData + 1
		Actor.setRechargeAwardData(sysarg, nTab, nAwardData)
		
		SendCycleInfo(sysarg, myExtractYB, nCanGetCount - nAwardData)
	end
end

--领取单日充值目标奖励
function GetOneDayPurposeAward(sysarg, nTab, nIndex, nAwardType, nScheme)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	if Actor.getRechargeAwardFlag(sysarg, nTab, nIndex) == 1 then
		Actor.sendTipmsg(sysarg, Lang.Activity.cztc0001, ttFlyTip)
		return
	end

	--是否已经完成目标，16位以上的保存符合条件项
	if Actor.getRechargeAwardFlag(sysarg, nTab, nIndex+16) == 0 then
		Actor.sendTipmsg(sysarg, Lang.Activity.cztc0002, ttFlyTip)
		return
	end

	local awardTerm = page[nScheme]
	if not awardTerm then return end

	local awards = awardTerm.purposeAwards[nIndex].awards
	if not awards then return end
	
	local myJob = Actor.getIntProperty(sysarg, PROP_ACTOR_VOCATION)
	local mySex = Actor.getIntProperty(sysarg, PROP_ACTOR_SEX)

	if Awards.CheckBagGridCount(sysarg, awards) then		--背包够不够
		for i=1,table.getn(awards) do
			if (awards[i].job == -1 or awards[i].job == myJob) and (awards[i].sex == -1 or awards[i].sex == mySex) then
				Actor.giveAward(sysarg,awards[i].type,awards[i].id,awards[i].count,awards[i].quality,awards[i].strong,awards[i].bind,0,954,Lang.Activity.cztc0005, -1, awards[i].expireTime)
			end
		end
		Actor.setRechargeAwardFlag(sysarg,nTab,nIndex,1)	--设置完成
		SendGetRechargeResult(sysarg,nTab,nIndex,nAwardType,nScheme)
	end
end

--领取单日充值额外奖励
function GetOneDayExtraAward(sysarg, nTab, nIndex, nAwardType, nScheme)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	--8位以上的保存额外领奖项
	if Actor.getRechargeAwardFlag(sysarg, nTab, nIndex+8) == 1 then
		Actor.sendTipmsg(sysarg, Lang.Activity.cztc0001, ttFlyTip)
		return
	end

		
	local awardTerm = page[nScheme]
	if not awardTerm then return end

	local nFinishPurpose = 0
	for i=1,table.getn(awardTerm.purposeAwards) do
		--是否已经完成目标，16位以上的保存符合条件项
		if Actor.getRechargeAwardFlag(sysarg, nTab, i+16) == 1 then
			nFinishPurpose = nFinishPurpose + 1
		end
	end

	if nFinishPurpose < awardTerm.extraAwards[nIndex].needPurposes then
		Actor.sendTipmsg(sysarg, Lang.Activity.cztc0003, ttFlyTip)
		return
	end

	local awards = awardTerm.extraAwards[nIndex].awards
	if not awards then return end
	
	local myJob = Actor.getIntProperty(sysarg, PROP_ACTOR_VOCATION)
	local mySex = Actor.getIntProperty(sysarg, PROP_ACTOR_SEX)

	if Awards.CheckBagGridCount(sysarg, awards) then		--背包够不够
		for i=1,table.getn(awards) do
			if (awards[i].job == -1 or awards[i].job == myJob) and (awards[i].sex == -1 or awards[i].sex == mySex) then
				Actor.giveAward(sysarg,awards[i].type,awards[i].id,awards[i].count,awards[i].quality,awards[i].strong,awards[i].bind,0,954,Lang.Activity.cztc0005, -1, awards[i].expireTime)
			end
		end
		--8位以上的保存额外领奖项
		Actor.setRechargeAwardFlag(sysarg,nTab,nIndex+8,1)	--设置完成
		SendGetRechargeResult(sysarg,nTab,nIndex,nAwardType,nScheme)
	end
end

--领取自选赠品奖励
function GetOptionalAward(sysarg, nTab, nIndex, nAwardType, nScheme)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	if Actor.getRechargeAwardFlag(sysarg, nTab, nIndex) == 1 then
		Actor.sendTipmsg(sysarg, Lang.Activity.cztc0001, ttFlyTip)
		return
	end
	
	local awardTerm = page[nScheme][nIndex]
	if not awardTerm then return end
	local myExtractYB = Actor.getRechargeExtractYB(sysarg, nTab)
	if myExtractYB < awardTerm.needYB then
		Actor.sendTipmsg(sysarg, Lang.Activity.cztc0002, ttFlyTip)
		return
	end
	
	local awards = awardTerm.awards	
	if not awards then return end
	
	local myJob = Actor.getIntProperty(sysarg, PROP_ACTOR_VOCATION)
	local mySex = Actor.getIntProperty(sysarg, PROP_ACTOR_SEX)

	if Awards.CheckBagGridCount(sysarg, awards) then		--背包够不够
		for i=1,table.getn(awards) do
			if (awards[i].job == -1 or awards[i].job == myJob) and (awards[i].sex == -1 or awards[i].sex == mySex) then
				Actor.giveAward(sysarg,awards[i].type,awards[i].id,awards[i].count,awards[i].quality,awards[i].strong,awards[i].bind,0,954,Lang.Activity.cztc0005, -1, awards[i].expireTime)
			end
		end
		for i=1,table.getn(page[nScheme]) do
			Actor.setRechargeAwardFlag(sysarg,nTab,i,1)	--设置完成
			SendGetRechargeResult(sysarg,nTab,i,nAwardType,nScheme)
		end
	end
end

--红利换购
function OnScoreExchange(sysarg, args)
	local nTab = args[2]
	local nBuyId = args[3]
	local nCount = args[4]

	if not nCount or nCount <= 0 then return end

	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end
	
	for k,item in ipairs(page[1].items or {}) do
		if item.id == nBuyId then
			local nConsume = item.price[1].price * nCount
			local myExtractYB = Actor.getRechargeExtractYB(sysarg, nTab)
			if myExtractYB < nConsume then
				Actor.sendTipmsg(sysarg, Lang.Activity.cztc0004, ttFlyTip)
				return
			end
			local awards =
			{
				{ type = 0, id = item.item, count = nCount, strong = item.strong, quality = item.quality, bind = 1, job = -1, sex = -1},				
			}
			if (item.price[1].bind == false) then
				awards[1].bind = 0
			end
			if Awards.CheckBagGridCount(sysarg, awards) then		--背包够不够
				Actor.giveAward(sysarg,0,awards[1].id,nCount,awards[1].quality,awards[1].strong,awards[1].bind,0,954,Lang.Activity.cztc0005, -1)
				Actor.setRechargeExtractYB(sysarg, nTab, myExtractYB-nConsume)
			end
			break
		end
	end
end

--返回充值领取奖励成功
function SendGetRechargeResult(sysarg,nTab,nIndex,nAwardType,nScheme)
	local pack = DataPack.allocPacket(sysarg, 52, 17)
	if (pack ~= nil) then
		DataPack.writeChar(pack, nTab)
		DataPack.writeChar(pack, nAwardType)
		DataPack.writeInt(pack, nIndex)
		DataPack.writeChar(pack, 1)
		DataPack.writeInt(pack, nScheme)
		DataPack.flush(pack)
	end
end

--充值套餐提取元宝
function OnRechargePackageExtractYB(sysarg, args)
	local nTab = args[2]
	local nScheme = args[3]
	local nValue = args[4]

	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	local nFlag = Actor.getRechargeExtractYB(sysarg, nTab)

	--累积充值
	if nTab == 1 then
		local awardTerms = page[nScheme]
		if not awardTerms then return end

		for i=1,table.getn(awardTerms) do
			if (nFlag >= awardTerms[i].needYB) and (Actor.getRechargeAwardFlag(sysarg,nTab,i+16) == 0) then
				Actor.setRechargeAwardFlag(sysarg,nTab,i+16,1)	--16位以上的保存符合条件项
			end
		end
	--单笔充值
	elseif nTab == 2 then
		local nNewFlag = nFlag
		local awardTerms = page[nScheme]
		if not awardTerms then return end

		for i=table.getn(awardTerms),1,-1 do
			if (nValue >= awardTerms[i].needYB) and (System.getIntBit(nFlag, i-1) == 0) then
				nNewFlag = System.setIntBit(nFlag, i-1, 1)
				Actor.setRechargeAwardFlag(sysarg,nTab,i+16,1)	--16位以上的保存符合条件项
				break
			end
		end

		if nNewFlag ~= nFlag then
			Actor.setRechargeExtractYB(sysarg, nTab, nNewFlag)
		end
	--循环充值
	elseif nTab == 3 then
	--单日充值
	elseif nTab == 4 then
		local awardTerms = page[nScheme]
		if not awardTerms then return end

		for k, purposeAward in ipairs(awardTerms.purposeAwards) do
			if System.isInTimeRange(purposeAward.timeRange[1], purposeAward.timeRange[2], purposeAward.timeRange[3],
						purposeAward.timeRange[4], purposeAward.timeRange[5], purposeAward.timeRange[6]) then
				if (nFlag >= purposeAward.needYB) and (Actor.getRechargeAwardFlag(sysarg, nTab, k+16) == 0) then
					Actor.setRechargeAwardFlag(sysarg,nTab,k+16,1)	--16位以上的保存符合条件项
				end
				break
			end
		end

		local nPurposeCount = 0
		for k, purposeAward in ipairs(awardTerms.purposeAwards) do
			if (Actor.getRechargeAwardFlag(sysarg, nTab, k+16) == 1) then	--16位以上的保存符合条件项
				nPurposeCount = nPurposeCount + 1
			end
		end

		for k, extraAward in ipairs(awardTerms.extraAwards) do
			if (nPurposeCount >= extraAward.needPurposes) and (Actor.getRechargeAwardFlag(sysarg, nTab, k+24) == 0) then
				Actor.setRechargeAwardFlag(sysarg,nTab,k+24,1)	--24位以上的保存符合条件额外项
			end
		end
	--自选赠品
	elseif nTab == 5 then
		local awardTerms = page[nScheme]
		if not awardTerms then return end

		--for i=1,table.getn(awardTerms) do
			local i = 1
			if (nFlag >= awardTerms[i].needYB) and (Actor.getRechargeAwardFlag(sysarg,nTab,i+16) == 0) then
				Actor.setRechargeAwardFlag(sysarg,nTab,i+16,1)	--16位以上的保存符合条件项
				--break
			end
		--end
	end
end

--计算循环充值信息
function OnCalcCycleInfo(sysarg, args)
	local nTab = args[2]
	local nScheme = args[3]

	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	local awardTerm = page[nScheme][1]
	if not awardTerm then return end
	
	local myExtractYB = Actor.getRechargeExtractYB(sysarg, nTab)
	local nCanGetCount = math.floor(myExtractYB / awardTerm.needYB)
	local nAwardData = Actor.getRechargeAwardData(sysarg, nTab)

	SendCycleInfo(sysarg, myExtractYB, nCanGetCount - nAwardData)
end

--返回循环充值信息
function SendCycleInfo(sysarg,myExtractYB,nLastGetCount)
	local pack = DataPack.allocPacket(sysarg, 52, 18)
	if (pack ~= nil) then
		DataPack.writeInt(pack, myExtractYB)
		DataPack.writeInt(pack, nLastGetCount)
		DataPack.flush(pack)
	end
end

--定时清除单日充值累积元宝数
function ClearRechargeYB()
	if System.isOpenRechargePackage() ~= true then
		return
	end

	local nOneDayTab = 4

	local pRank = Ranking.getRanking("RechargePackageRank.txt")
	if pRank then
		local nCount = Ranking.getRankItemCount(pRank)
		for i=0,nCount-1 do
			local pItem = Ranking.getItemFromIndex(pRank,i)
			if pItem then
				Ranking.setSub(pItem,nOneDayTab-1,tostring(0))  --单日充值累积元宝
			end
		end
	end
end

--0点重置充值套餐
function ResetRechargePackage()
	if System.isOpenRechargePackage() ~= true then
		return
	end

	local nOneDayTab = 2
	local nOptionalTab = 5

	local nOneDayScheme = System.getRechargeScheme(nSingleTab)
	local nOptionalScheme = System.getRechargeScheme(nOptionalTab)

	--发送为领奖的离线消息
	AddRechargeRankOfflineMsg(nOneDayTab, nOneDayScheme)
	AddRechargeRankOfflineMsg(nOptionalTab, nOptionalScheme)

	local pRank = Ranking.getRanking("RechargePackageRank.txt")
	if pRank then
		local nCount = Ranking.getRankItemCount(pRank)
		for i=0,nCount-1 do
			local pItem = Ranking.getItemFromIndex(pRank,i)
			if pItem then
				Ranking.setSub(pItem,nOneDayTab-1,tostring(0))  --单日充值累积元宝
				Ranking.setSub(pItem,nOptionalTab-1,tostring(0))  --自选充值累积元宝
			end
		end
	end
	
	local pRank = Ranking.getRanking("RechargePackage.txt")
	if pRank then
		local nCount = Ranking.getRankItemCount(pRank)
		for i=0,nCount-1 do
			local pItem = Ranking.getItemFromIndex(pRank,i)
			if pItem then
				Ranking.setSub(pItem,nOneDayTab-1,tostring(0))  --单日充值领取奖励
				Ranking.setSub(pItem,nOptionalTab-1,tostring(0))  --自选充值领取奖励
			end
		end
	end

	local playerList = LuaHelp.getAllActorList()		
	if playerList ~= nil then
		for j = 1, #playerList do
			local player = playerList[j]
			if player then
				Actor.setRechargeExtractYB(player, nOneDayTab, 0)
				Actor.setRechargeExtractYB(player, nOptionalTab, 0)
				Actor.setRechargeAwardData(player, nOneDayTab, 0)
				Actor.setRechargeAwardData(player, nOptionalTab, 0)
			end
		end
	end
end

--增加离线奖励
function AddRechargeRankOfflineMsg(nTab, nScheme)
	--累积充值
	if nTab == 1 then
		AddCommonOfflineMsg(nTab, 1, nScheme, Lang.Activity.cztc0006)
	--单笔充值
	elseif nTab == 2 then
		AddCommonOfflineMsg(nTab, 1, nScheme, Lang.Activity.cztc0007)
	--循环充值
	elseif nTab == 3 then
		AddCycleOfflineMsg(nTab, 1, nScheme, Lang.Activity.cztc0008)
	--单日充值
	elseif nTab == 4 then
		AddPurposeOfflineMsg(nTab, 4, nScheme, Lang.Activity.cztc0009)
		AddExtraOfflineMsg(nTab, 101, nScheme, Lang.Activity.cztc0009)
	--自选赠品
	elseif nTab == 5 then
		AddCommonOfflineMsg(nTab, 1, nScheme, Lang.Activity.cztc0010)
	end
end

--增加普通离线奖励
function AddCommonOfflineMsg(nTab, nAwardType, nScheme, title)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	local pRank = Ranking.getRanking("RechargePackage.txt")
	if pRank then
		local nCount = Ranking.getRankItemCount(pRank)
		for i=0,nCount-1 do
			local pItem = Ranking.getItemFromIndex(pRank,i)
			if pItem then
				local nAwardData = tonumber(Ranking.getSub(pItem,nTab-1))

				for k, awardTerm in ipairs(page[nScheme] or {}) do
					--可领取且未领取
					if (System.getIntBit(nAwardData, 16+k-1) == 1) and (System.getIntBit(nAwardData, k-1) == 0) then
						local actorId = Ranking.getId(pItem)
						System.addOfflineMsg(actorId, 53, title, 0, nTab, k, nAwardType, nScheme)
					end
				end
			end
		end
	end
end

--增加循环离线奖励
function AddCycleOfflineMsg(nTab, nAwardType, nScheme, title)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end
	
	local awardTerm = page[nScheme][1]
	if not awardTerm then return end

	local pRank = Ranking.getRanking("RechargePackage.txt")
	local tRank = Ranking.getRanking("RechargePackageRank.txt")
	if pRank and tRank then
		local nCount = Ranking.getRankItemCount(pRank)
		for i=0,nCount-1 do
			local pItem = Ranking.getItemFromIndex(pRank,i)
			if pItem then
				local nAwardData = tonumber(Ranking.getSub(pItem,nTab-1))  --循环领取次数

				local actorId = Ranking.getId(pItem)
				local tItem = Ranking.getItemPtrFromId(tRank, actorId)
				if tItem then
					local myExtractYB = tonumber(Ranking.getSub(tItem,nTab-1))
					local nCanGetCount = math.floor(myExtractYB / awardTerm.needYB)
					System.addOfflineMsg(actorId, 53, title, 0, nTab, 1, nCanGetCount - nAwardData, nScheme)
				end
			end
		end
	end
end

--增加目标离线奖励
function AddPurposeOfflineMsg(nTab, nAwardType, nScheme, title)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	local pRank = Ranking.getRanking("RechargePackage.txt")
	if pRank then
		local nCount = Ranking.getRankItemCount(pRank)
		for i=0,nCount-1 do
			local pItem = Ranking.getItemFromIndex(pRank,i)
			if pItem then
				local nAwardData = tonumber(Ranking.getSub(pItem,nTab-1))

				for k, awardTerm in ipairs(page[nScheme].purposeAwards or {}) do
					--可领取且未领取
					if (System.getIntBit(nAwardData, 16+k-1) == 1) and (System.getIntBit(nAwardData, k-1) == 0) then
						local actorId = Ranking.getId(pItem)
						System.addOfflineMsg(actorId, 53, title, 0, nTab, k, nAwardType, nScheme)
					end
				end
			end
		end
	end
end

--增加额外离线奖励
function AddExtraOfflineMsg(nTab, nAwardType, nScheme, title)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	local pRank = Ranking.getRanking("RechargePackage.txt")
	if pRank then
		local nCount = Ranking.getRankItemCount(pRank)
		for i=0,nCount-1 do
			local pItem = Ranking.getItemFromIndex(pRank,i)
			if pItem then
				local nAwardData = tonumber(Ranking.getSub(pItem,nTab-1))

				for k, awardTerm in ipairs(page[nScheme].extraAwards or {}) do
					--可领取且未领取
					if (System.getIntBit(nAwardData, 24+k-1) == 1) and (System.getIntBit(nAwardData, 8+k-1) == 0) then
						local actorId = Ranking.getId(pItem)
						System.addOfflineMsg(actorId, 53, title, 0, nTab, k, nAwardType, nScheme)
					end
				end
			end
		end
	end
end

--领取充值套餐离线消息
function OnGetRechargePackageOffline(sysarg, args)
	local nTab = args[2]
	local nIndex = args[3]
	local nAwardType = args[4]
	local nScheme = args[5]
	
	--累积充值、单笔充值、自选赠品
	if (nTab == 1) or (nTab == 2) or (nTab == 5) then
		GetCommonOffline(sysarg, nTab, nIndex, nAwardType, nScheme)
	--循环充值
	elseif (nTab == 3) then
		GetCycleOffline(sysarg, nTab, nIndex, nAwardType, nScheme)
	--单日充值
	elseif (nTab == 4) then
		if nAwardType == 4 then
			GetPurposeOffline(sysarg, nTab, nIndex, nAwardType, nScheme)
		elseif nAwardType == 101 then
			GetExtraOffline(sysarg, nTab, nIndex, nAwardType, nScheme)
		end
	end
end

--领取普通离线奖励
function GetCommonOffline(sysarg, nTab, nIndex, nAwardType, nScheme)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end
	
	local awardTerm = page[nScheme][nIndex]
	if not awardTerm then return end
	
	local awards = awardTerm.awards	
	if not awards then return end
	
	local myJob = Actor.getIntProperty(sysarg, PROP_ACTOR_VOCATION)
	local mySex = Actor.getIntProperty(sysarg, PROP_ACTOR_SEX)

	if Awards.CheckBagGridCount(sysarg, awards) then		--背包够不够
		for i=1,table.getn(awards) do
			if (awards[i].job == -1 or awards[i].job == myJob) and (awards[i].sex == -1 or awards[i].sex == mySex) then
				Actor.giveAward(sysarg,awards[i].type,awards[i].id,awards[i].count,awards[i].quality,awards[i].strong,awards[i].bind,0,954,Lang.Activity.cztc0005, -1, awards[i].expireTime)
			end
		end
	end
end

--领取循环离线奖励
function GetCycleOffline(sysarg, nTab, nIndex, nAwardType, nScheme)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end

	local awardTerm = page[nScheme][nIndex]
	if not awardTerm then return end

	local awards = awardTerm.awards	
	if not awards then return end

	local myJob = Actor.getIntProperty(sysarg, PROP_ACTOR_VOCATION)
	local mySex = Actor.getIntProperty(sysarg, PROP_ACTOR_SEX)

	if Awards.CheckBagGridCount(sysarg, awards) then		--背包够不够
		for j=1,nAwardType do  --循环nAwardType次
			for i=1,table.getn(awards) do
				if (awards[i].job == -1 or awards[i].job == myJob) and (awards[i].sex == -1 or awards[i].sex == mySex) then
					Actor.giveAward(sysarg,awards[i].type,awards[i].id,awards[i].count,awards[i].quality,awards[i].strong,awards[i].bind,0,954,Lang.Activity.cztc0005, -1, awards[i].expireTime)
				end
			end
		end
	end
end

--领取目标离线奖励
function GetPurposeOffline(sysarg, nTab, nIndex, nAwardType, nScheme)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end
	
	local awardTerm = page[nScheme].purposeAwards[nIndex]
	if not awardTerm then return end
	
	local awards = awardTerm.awards	
	if not awards then return end
	
	local myJob = Actor.getIntProperty(sysarg, PROP_ACTOR_VOCATION)
	local mySex = Actor.getIntProperty(sysarg, PROP_ACTOR_SEX)

	if Awards.CheckBagGridCount(sysarg, awards) then		--背包够不够
		for i=1,table.getn(awards) do
			if (awards[i].job == -1 or awards[i].job == myJob) and (awards[i].sex == -1 or awards[i].sex == mySex) then
				Actor.giveAward(sysarg,awards[i].type,awards[i].id,awards[i].count,awards[i].quality,awards[i].strong,awards[i].bind,0,954,Lang.Activity.cztc0005, -1, awards[i].expireTime)
			end
		end
	end
end

--领取额外离线奖励
function GetExtraOffline(sysarg, nTab, nIndex, nAwardType, nScheme)
	local page = RechargePackageData.pagedata[nTab]
	if page == nil then return end
	
	local awardTerm = page[nScheme].extraAwards[nIndex]
	if not awardTerm then return end
	
	local awards = awardTerm.awards	
	if not awards then return end
	
	local myJob = Actor.getIntProperty(sysarg, PROP_ACTOR_VOCATION)
	local mySex = Actor.getIntProperty(sysarg, PROP_ACTOR_SEX)

	if Awards.CheckBagGridCount(sysarg, awards) then		--背包够不够
		for i=1,table.getn(awards) do
			if (awards[i].job == -1 or awards[i].job == myJob) and (awards[i].sex == -1 or awards[i].sex == mySex) then
				Actor.giveAward(sysarg,awards[i].type,awards[i].id,awards[i].count,awards[i].quality,awards[i].strong,awards[i].bind,0,954,Lang.Activity.cztc0005, -1, awards[i].expireTime)
			end
		end
	end
end
