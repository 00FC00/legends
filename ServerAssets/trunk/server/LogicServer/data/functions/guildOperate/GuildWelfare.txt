--#include "data\language\LangCode.txt" once
--#include "data\config\guild\WelfareConfig.txt" once




--#include "data\config\activityconfig\RushToxic\ToxicRankFile.txt" once--两个行会副本使用同一个名单存取，这样可以
--#include "data\config\activityconfig\RushToxic\ToxicConfig.txt" once
--#include "data\config\activityconfig\GuildSos\GuildSosConfig.txt" once --劫狱副本配置

--加一个行会副本状态的逻辑
function OnAskGuildFubenInfo(sysarg, args)
  local nGuildId = Actor.getIntProperty(sysarg,PROP_ACTOR_GUILD_ID)
  
  if nGuildId <= 0 then return end --没行会则不返回 
  
  local fhadle = Actor.getGuildFuBenHandle(sysarg)
  local sname = Fuben.getFubenName(fhadle)
  local pack = DataPack.allocPacket(sysarg, 10, 84)
  
  if (pack == nil) then return end
  --0为未开启,1为正在进行,2为已开启
  local nTimes = 0
  local RankNameList = Ranking.getRanking(ToxicRankConfig.dayRankName)		--通过排行名称获取排行对象
  if RankNameList ~= nil then
	 local pItem = Ranking.getItemPtrFromId(RankNameList,nGuildId)
     if pItem then
		nTimes = tonumber(Ranking.getSub(pItem,1))
     end
  end
  if nTimes == nil then
	 nTimes = 0
  end
  if System.getToxicFreshTimes(nGuildId) <= 0 or sname == "" then	--还没开启
     if nTimes >= ToxicConfig.maxTimes then 
        --print("2")
	    DataPack.writeByte(pack, 2)
     else
        --print("0")
        DataPack.writeByte(pack, 0)
     end
  else
	 DataPack.writeByte(pack, 1)
	 --print("1")
  end

 --0为未开启,1为正在进行,2为已开启
  nTimes = 0
  if RankNameList ~= nil then
	 local pItem = Ranking.getItemPtrFromId(RankNameList,nGuildId)
     if pItem then
		nTimes = tonumber(Ranking.getSub(pItem,2))
     end
  end
  if nTimes == nil then
 	 nTimes = 0
  end
  if System.getSosFubenFreshTimes( nGuildId) <= 0  then	--还没开启
     if nTimes >= GuildSosConfig.IntoAllTimes then
        --print("2")
	    DataPack.writeByte(pack, 2)
     else
        DataPack.writeByte(pack, 0)
        --print("0")
     end
  else
	 DataPack.writeByte(pack, 1)
	 --print("1")
  end
  DataPack.flush(pack)
end

function GetIndexByWelfare(nItemId)
	for i=1,table.getn(WelfareConfig.welfareList) do
		if WelfareConfig.welfareList[i].awards[1].id == nItemId then
			return i
		end
	end

	return 0
end

--开启行会福利
function OnOpenGuildWelfare(sysarg,args)
	local nItemId = args[2]
	local nIndex = GetIndexByWelfare(nItemId)

	local nConfig = WelfareConfig.welfareList[nIndex]
	if nConfig == nil then return end
	
	local nGuildId = Actor.getIntProperty(sysarg,PROP_ACTOR_GUILD_ID)
	if nGuildId <= 0 then 
		Actor.sendTipmsg(sysarg,Lang.GuildLang.wel001,ttFlyTip)
		return
	end

	local nPos = Actor.getGuildPos(sysarg)
	if nPos ~=2 and nPos ~= 3 then
		Actor.sendTipmsg(sysarg,Lang.GuildLang.wel001,ttFlyTip)
		return
	end

	local ranking = Ranking.getRanking(WelfareConfig.guildWelfareOPen)
	if ranking then
		local pItem = Ranking.getItemPtrFromId(ranking,nGuildId)
		if pItem == nil then
			pItem = Ranking.addItem(ranking,nGuildId,0)
			for i=0,7 do
				Ranking.setSub(pItem,i,tostring(0))
			end
		end

		if pItem then
			local bState = tonumber(Ranking.getSub(pItem,nIndex-1))
			if bState > 0 then		--已开启
				Actor.sendTipmsg(sysarg,Lang.GuildLang.wel002,ttFlyTip)
				return
			end
			
			for i=1,table.getn(nConfig.needConsume) do
				local bResult = Actor.checkConsume(sysarg,nConfig.needConsume[i].type,nConfig.needConsume[i].id,nConfig.needConsume[i].count,nConfig.needConsume[i].quality,
					nConfig.needConsume[i].strong,nConfig.needConsume[i].bind)

				if bResult == false then
					Actor.sendTipmsg(sysarg,Lang.GuildLang.wel003,ttFlyTip)
					return
				end
			end
			
			for i=1,table.getn(nConfig.needConsume) do
				Actor.removeConsume(sysarg,nConfig.needConsume[i].type,nConfig.needConsume[i].id,nConfig.needConsume[i].count,nConfig.needConsume[i].quality,
					nConfig.needConsume[i].strong,nConfig.needConsume[i].bind,0,916,Lang.GuildLang.wel004)
			end

			Ranking.setSub(pItem,nIndex-1,tostring(nConfig.nCount))

			Actor.sendTipmsg(sysarg,Lang.GuildLang.wel005,ttFlyTip)

			local pack = DataPack.allocPacket(sysarg, 10, 77)
			if (pack ~= nil) then
				DataPack.writeByte(pack, 1)
				DataPack.writeInt(pack, nItemId)
				DataPack.flush(pack)
			end

		end
	end
end

--领取行会福利
function OnGetGuildWelfare(sysarg,args)
	local nItemId = args[2]
	local nIndex = GetIndexByWelfare(nItemId)

	local nConfig = WelfareConfig.welfareList[nIndex]
	if nConfig == nil then return end
	
	local nGuildId = Actor.getIntProperty(sysarg,PROP_ACTOR_GUILD_ID)
	if nGuildId <= 0 then 
		Actor.sendTipmsg(sysarg,Lang.GuildLang.wel006,ttFlyTip)
		return
	end
	
	local ranking = Ranking.getRanking(WelfareConfig.guildWelfareOPen)
	if ranking then
		local pItem = Ranking.getItemPtrFromId(ranking,nGuildId)
		if pItem == nil then
			Actor.sendTipmsg(sysarg,Lang.GuildLang.wel007,ttFlyTip)
			return
		end

		local bState = tonumber(Ranking.getSub(pItem,nIndex-1))
		if bState <= 0 then
			Actor.sendTipmsg(sysarg,Lang.GuildLang.wel007,ttFlyTip)
			return
		end

		local nGx = Actor.getGuildGx(sysarg)
		if nGx < nConfig.needGx then
			Actor.sendTipmsg(sysarg,Lang.GuildLang.wel008,ttFlyTip)
			return
		end

		local freeBag = Item.getBagEmptyGridCount(sysarg) 
		if freeBag < nConfig.needbag then
			Actor.sendTipmsg(sysarg,Lang.GuildLang.wel009,ttFlyTip)
			return
		end
		
		local pRanking = Ranking.getRanking(WelfareConfig.GetGuildWelfareFile)
		if pRanking then
			local nActorId = Actor.getIntProperty(sysarg,PROP_ENTITY_ID)
			local nItem = Ranking.getItemPtrFromId(pRanking,nActorId)
			if nItem == nil then
				nItem = Ranking.addItem(pRanking,nActorId,0)
				for i=0,7 do
					Ranking.setSub(nItem,i,tostring(0))
				end
			end
			
			if nItem then
				local nResult = tonumber(Ranking.getSub(nItem,nIndex-1))
				if nResult == 1 then		--已领取
					Actor.sendTipmsg(sysarg,Lang.GuildLang.wel011,ttFlyTip)
					return
				end

				for i=1,table.getn(nConfig.awards) do
					Actor.giveAward(sysarg,nConfig.awards[i].type,nConfig.awards[i].id,nConfig.awards[i].count,nConfig.awards[i].quality,nConfig.awards[i].strong,
					nConfig.awards[i].bind,0,916,Lang.GuildLang.wel010)
				end
				
				Actor.changeGuildGx(sysarg,-nConfig.needGx)
				Ranking.setSub(nItem,nIndex-1,tostring(1))
				
				bState = bState - 1
				if pItem then
					Ranking.setSub(pItem,nIndex-1,tostring(bState))
				end

				SendGuildWelfareInfo(sysarg)
			end
		end
	end
end

--发送行会福利面板信息
function SendGuildWelfareInfo(sysarg)
	local pack = DataPack.allocPacket(sysarg, 10, 78)
	if (pack ~= nil) then
		local nCount = table.getn(WelfareConfig.welfareList)

		local nGuildId = Actor.getIntProperty(sysarg,PROP_ACTOR_GUILD_ID)
		if nGuildId <= 0 then 
			return
		end

		local ranking = Ranking.getRanking(WelfareConfig.guildWelfareOPen)
		if ranking then
			local pItem = Ranking.getItemPtrFromId(ranking,nGuildId)
			DataPack.writeInt(pack, nCount)
			
			if pItem then
				for i=1,nCount do
					DataPack.writeInt(pack, WelfareConfig.welfareList[i].awards[1].id)
					local nResult = tonumber(Ranking.getSub(pItem,i-1))
					if nResult > 0 then
						DataPack.writeByte(pack, 1)
						DataPack.writeInt(pack, nResult)
					else
						DataPack.writeByte(pack, 0)
						DataPack.writeInt(pack, WelfareConfig.welfareList[i].nCount)
					end
				end
			else
				for i=1,nCount do
					DataPack.writeInt(pack, WelfareConfig.welfareList[i].awards[1].id)
					DataPack.writeByte(pack, 0)
					DataPack.writeInt(pack, WelfareConfig.welfareList[i].nCount)
				end
			end
			
			DataPack.flush(pack)
		end
	end
end

--积分排行榜初始化
function GuildWelfareRankInit()
	local RankNameList = Ranking.getRanking(WelfareConfig.guildWelfareOPen)		--通过排行名称获取排行对象
	if RankNameList == nil then							--没有排行对象则创建并加载数据
		RankNameList = Ranking.add(WelfareConfig.guildWelfareOPen,1000,0)		--创建排行榜
		if RankNameList ~= nil then
			local isLoad = Ranking.load(RankNameList,WelfareConfig.guildWelfareOPen)
			
			if isLoad == false then
				for i=1,8 do
					Ranking.addColumn(RankNameList,"value"..i)
				end
			end
		end
	end

	local ranking = Ranking.getRanking(WelfareConfig.GetGuildWelfareFile)		--通过排行名称获取排行对象
	if ranking == nil then							--没有排行对象则创建并加载数据
		ranking = Ranking.add(WelfareConfig.GetGuildWelfareFile,1000,0)		--创建排行榜
		if ranking ~= nil then
			local isLoad = Ranking.load(ranking,WelfareConfig.GetGuildWelfareFile)
			
			if isLoad == false then
				for i=1,8 do
					Ranking.addColumn(ranking,"value"..i)
				end
			end
		end
	end
end

--保存积分排行榜
function GuildWelfareRankFinality()
	local ranking = Ranking.getRanking(WelfareConfig.guildWelfareOPen)
	if ranking then
		Ranking.save(ranking,WelfareConfig.guildWelfareOPen,true)
	end

	local RankNameList = Ranking.getRanking(WelfareConfig.GetGuildWelfareFile)
	if RankNameList then
		Ranking.save(RankNameList,WelfareConfig.GetGuildWelfareFile,true)
	end
end

table.insert(InitFnTable,GuildWelfareRankInit)
table.insert(FinaFnTable,GuildWelfareRankFinality)